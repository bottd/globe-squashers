// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Create Create component Should render like snapshot 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <Create
    fetchImages={[MockFunction]}
    images={Array []}
    page={2}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "fetchImages": [MockFunction],
      "images": Array [],
      "page": 2,
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="Create"
      >
        FSDKJFLSDJ
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "FSDKJFLSDJ",
        "className": "Create",
      },
      "ref": null,
      "rendered": Array [
        "FSDKJFLSDJ",
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "fetchImages": [MockFunction],
        "images": Array [],
        "page": 2,
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="Create"
        >
          FSDKJFLSDJ
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "FSDKJFLSDJ",
          "className": "Create",
        },
        "ref": null,
        "rendered": Array [
          "FSDKJFLSDJ",
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
