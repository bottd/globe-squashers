// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Create Create component Should render like snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Create
    addProof={[MockFunction]}
    fetchImage={
      [MockFunction] {
        "calls": Array [
          Array [
            undefined,
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    fetchImages={
      [MockFunction] {
        "calls": Array [
          Array [
            2,
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    image={Object {}}
    images={
      Array [
        1,
        2,
        3,
      ]
    }
    page={2}
    resetImages={[MockFunction]}
    setPage={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          onSubmit={[Function]}
        >
          <h3 />
          <textarea
            className="note-input"
            onChange={[Function]}
            placeholder="Write your note here"
            rows="5"
            value=""
          />
          <button
            onClick={[Function]}
            type="submit"
          >
            Submit
          </button>
        </form>,
        <div
          className="hubble-img"
          style={
            Object {
              "backgroundImage": "url(undefined)",
            }
          }
        >
          <button
            className="backward-btn"
            onClick={[Function]}
          >
            <i
              className="fas fa-chevron-left"
            />
          </button>
          <button
            className="forward-btn"
            onClick={[Function]}
          >
            <i
              className="fas fa-chevron-right"
            />
          </button>
        </div>,
      ],
      "className": "Create",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3 />,
            <textarea
              className="note-input"
              onChange={[Function]}
              placeholder="Write your note here"
              rows="5"
              value=""
            />,
            <button
              onClick={[Function]}
              type="submit"
            >
              Submit
            </button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "note-input",
              "onChange": [Function],
              "placeholder": "Write your note here",
              "rows": "5",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Submit",
              "onClick": [Function],
              "type": "submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="backward-btn"
              onClick={[Function]}
            >
              <i
                className="fas fa-chevron-left"
              />
            </button>,
            <button
              className="forward-btn"
              onClick={[Function]}
            >
              <i
                className="fas fa-chevron-right"
              />
            </button>,
          ],
          "className": "hubble-img",
          "style": Object {
            "backgroundImage": "url(undefined)",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="fas fa-chevron-left"
              />,
              "className": "backward-btn",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fas fa-chevron-left",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="fas fa-chevron-right"
              />,
              "className": "forward-btn",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fas fa-chevron-right",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            onSubmit={[Function]}
          >
            <h3 />
            <textarea
              className="note-input"
              onChange={[Function]}
              placeholder="Write your note here"
              rows="5"
              value=""
            />
            <button
              onClick={[Function]}
              type="submit"
            >
              Submit
            </button>
          </form>,
          <div
            className="hubble-img"
            style={
              Object {
                "backgroundImage": "url(undefined)",
              }
            }
          >
            <button
              className="backward-btn"
              onClick={[Function]}
            >
              <i
                className="fas fa-chevron-left"
              />
            </button>
            <button
              className="forward-btn"
              onClick={[Function]}
            >
              <i
                className="fas fa-chevron-right"
              />
            </button>
          </div>,
        ],
        "className": "Create",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3 />,
              <textarea
                className="note-input"
                onChange={[Function]}
                placeholder="Write your note here"
                rows="5"
                value=""
              />,
              <button
                onClick={[Function]}
                type="submit"
              >
                Submit
              </button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "note-input",
                "onChange": [Function],
                "placeholder": "Write your note here",
                "rows": "5",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
                "onClick": [Function],
                "type": "submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="backward-btn"
                onClick={[Function]}
              >
                <i
                  className="fas fa-chevron-left"
                />
              </button>,
              <button
                className="forward-btn"
                onClick={[Function]}
              >
                <i
                  className="fas fa-chevron-right"
                />
              </button>,
            ],
            "className": "hubble-img",
            "style": Object {
              "backgroundImage": "url(undefined)",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="fas fa-chevron-left"
                />,
                "className": "backward-btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fas fa-chevron-left",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="fas fa-chevron-right"
                />,
                "className": "forward-btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fas fa-chevron-right",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
