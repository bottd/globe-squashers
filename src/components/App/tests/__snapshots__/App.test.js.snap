// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Should render like snapshot 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <App
    fetchImages={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "fetchImages": [MockFunction],
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="App"
      >
        <h1>
          hi
        </h1>
        <button>
          Button
        </button>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            hi
          </h1>,
          <button
            onClick={[Function]}
          >
            Button
          </button>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <h1>
            hi
          </h1>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "hi",
          },
          "ref": null,
          "rendered": Array [
            "hi",
          ],
          "type": "h1",
        },
        Object {
          "instance": <button>
            Button
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "Button",
          ],
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "fetchImages": [MockFunction],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="App"
        >
          <h1>
            hi
          </h1>
          <button>
            Button
          </button>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              hi
            </h1>,
            <button
              onClick={[Function]}
            >
              Button
            </button>,
          ],
          "className": "App",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <h1>
              hi
            </h1>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "hi",
            },
            "ref": null,
            "rendered": Array [
              "hi",
            ],
            "type": "h1",
          },
          Object {
            "instance": <button>
              Button
            </button>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              "Button",
            ],
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
